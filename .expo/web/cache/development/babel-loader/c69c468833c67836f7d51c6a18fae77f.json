{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar nextTodoId = 0;\nvar todosSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {\n    addTodo: function addTodo(state, action) {\n      state.push({\n        id: nextTodoId++,\n        text: action.payload,\n        completed: false\n      });\n    },\n    toggleTodo: function toggleTodo(state, action) {\n      var todo = state.find(function (todo) {\n        return todo.id === action.payload;\n      });\n\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    }\n  }\n});\nvar _todosSlice$actions = todosSlice.actions,\n    addTodo = _todosSlice$actions.addTodo,\n    toggleTodo = _todosSlice$actions.toggleTodo;\nexport { addTodo, toggleTodo };\nexport default todosSlice.reducer;","map":{"version":3,"sources":["E:/workspace/2VA_GesTempo_Lista de tarefas/src/features/todos/todosSlice.js"],"names":["createSlice","nextTodoId","todosSlice","name","initialState","reducers","addTodo","state","action","push","id","text","payload","completed","toggleTodo","todo","find","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAIC,UAAU,GAAG,CAAjB;AAEA,IAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACE,IAAN,CAAW;AAAEC,QAAAA,EAAE,EAAET,UAAU,EAAhB;AAAoBU,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAAjC;AAA0CC,QAAAA,SAAS,EAAE;AAArD,OAAX;AACD,KAHO;AAIRC,IAAAA,UAJQ,sBAIGP,KAJH,EAIUC,MAJV,EAIkB;AACxB,UAAMO,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAW,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACI,OAAvB;AAAA,OAAf,CAAb;;AACA,UAAIG,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACF,SAAL,GAAiB,CAACE,IAAI,CAACF,SAAvB;AACD;AACF;AATO;AAHmB,CAAD,CAA9B;AAgBO,0BAAgCX,UAAU,CAACe,OAA3C;AAAA,IAAQX,OAAR,uBAAQA,OAAR;AAAA,IAAiBQ,UAAjB,uBAAiBA,UAAjB;;AAEP,eAAeZ,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nlet nextTodoId = 0;\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {\n    addTodo(state, action) {\n      state.push({ id: nextTodoId++, text: action.payload, completed: false })\n    },\n    toggleTodo(state, action) {\n      const todo = state.find(todo => todo.id === action.payload)\n      if (todo) {\n        todo.completed = !todo.completed\n      }\n    }\n  }\n})\n\nexport const { addTodo, toggleTodo } = todosSlice.actions\n\nexport default todosSlice.reducer"]},"metadata":{},"sourceType":"module"}